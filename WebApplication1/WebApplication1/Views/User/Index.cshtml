@using WebApplication1.Data.models;
@using X.PagedList.Mvc.Core;
@using WebApplication1.Data
@{
    ViewData["Title"] = "User Table Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Centered White Rectangle</title>
<link href='https://fonts.googleapis.com/css?family=Rubik' rel='stylesheet'>
<style>
    body {
        margin: 0;
        padding: 0;
        background-color: #D0D0D0; /* Сірий фон */
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh; /* Висота вікна браузера */
    }
    .window {
        width: 85%; /* Ширина прямокутника */
        height: 85%; /* Висота прямокутника */
        background-color: #ffffff; /* Білий колір */
        display: flex;
        /* Вирівнюємо елементи горизонтально */
        justify-content: space-between;
        align-items: center;
    }
    .left-menu {
        width: 20%; /* Ширина лівого меню */
        height: 100%; /* Висота лівого меню */
        background-color: #403D49; /* Чорний колір */
    }
    .container {
        width: calc(80% - 0px);
        height: 100%;
        background-color: #FFFFFF;
        overflow: auto; 
    }
    /*ЗДРАВИЙ КОД*/
        .modal {
            display: none; /* Початково прихований */
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4); /* Напівпрозорий фон */
        }

        .modal-edit {
            display: none; /* Початково прихований */
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4); /* Напівпрозорий фон */
        }

        .modal-content {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 30%;
            height: 50%;
            border-radius: 20px;
            background-color: #FFFFFF;
            padding: 40px;
        }


        /* Закриття модального вікна */
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        .form-group {
            margin-bottom: 20px;
        }

        /* Заокруглення форм */
        .rounded-input {
            border-radius: 20px;
            border: 3px solid #AD99DA;
            padding: 8px;
            width: calc(100% - 16px);
        }

        /* Стилізація кнопки */
        button[type="submit"] {
            border: none;
            background-color: #AD99DA;
            color: white;
            padding: 10px 20px;
            border-radius: 10px;
            cursor: pointer;
            margin-left: auto;
        }

        /* Стилі для розділення на дві колонки */
        .form-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

            /* Горизонтальний відступ між формами */
            .form-row input {
                margin-right: 10px;
            }

        /* Стилі для кнопки */
        button[type="submit"] {
            margin-top: -10px;
        }

        .dialog-text {
            color: #B6AEE5;
            font-size: 24px;
            font-weight: bold;
        }
        /* Стилі для таблиці */
        /* Стилі для таблиці */
        .table-history {
            width: 90%; /* Ширина таблиці */
            margin: 0 auto; /* Вирівнювання по центру */
            border-collapse: collapse; /* Злиття меж між комірками */
            overflow-y: auto; /* Додавання вертикального скролу */
            max-height: 100px; /* Максимальна висота таблиці */
        }


            /* Стилі для заголовків таблиці */
            .table-history th {
                font-weight: bold; /* Жирний шрифт */
                border-bottom: 1px solid #ccc; /* Горизонтальна лінія між заголовками і рядками */
                padding: 10px; /* Відступи від тексту до межі комірки */
                background-color: white;
            }

            /* Стилі для комірок таблиці */
            .table-history td {
                border-bottom: 1px solid #ccc; /* Горизонтальна лінія між рядками */
                padding: 10px; /* Відступи від тексту до межі комірки */
                background-color: white;
            }

        .dialog-table {
            overflow-y: auto; /* Додавання вертикального скролу */
            max-height: 200px;
            position: relative; /* Потрібно для позиціонування фонової смуги */
        }

            /* Стилі для повзунка */
            .dialog-table::-webkit-scrollbar-thumb {
                background-color: red; /* Колір повзунка */
                border-radius: 10px; /* Радіус кутів */
            }

            /* Стилі для фонової смуги */
            .dialog-table::-webkit-scrollbar-track {
                background-color: #8a2be2; /* Колір фонової смуги */
                border-radius: 10px; /* Радіус кутів */
            }
        /*КІНЕЦЬ ЗДРАВОГО КОДУ*/

.custom-table-container {
    overflow: hidden; /* Відключаємо прокрутку таблиці */
    margin: 35px 25px;
}

.custom-table {
    table-layout: fixed;
    width: 100%;
}

th, td {
    white-space: nowrap;
    text-overflow: ellipsis;
    text-align: left;   
    overflow: hidden;
    font-size: 14px;
}

td {
   padding-left:10px;
   overflow: hidden;
}

th {
    padding:10px;
    background-color: #B6AEE5;
    color: #FFFFFF;
    text-decoration: none;
}

.th-href {
    color: #FFFFFF;
    text-decoration: none;
}

.th-href:hover {
    color: #FFFFFF;
    text-decoration: none;
    cursor: pointer;
}

tr:hover {
    background-color: #ddd;
}

.vertical-line {
    border-right: 2px solid #fff;
}

.table-img {
    width: 35px;
    height: 35px;
}

.table-btn-img {
    cursor: pointer;
    display: flex;
    justify-content: center;
    padding-right: 8px;
}

.actions-col {
    width: 25%;
}

.search-box {
    display: flex;
    align-items: center;
    border: 1px solid #B6AEE5;
    border-radius: 15px;
    padding: 3px;
    width: 180px;
    margin-bottom: 10px;
}

.search-box input {
    flex-grow: 1;
    border: none; /* Removes default input border */
    outline: none; /* Removes focus outline */
    font-family: 'Rubik', sans-serif;
    font-size: 16px; /* Adjust font size as needed */
    color: #666666; /* Adjust text color as needed */
    background-color: transparent; /* Ensures no background color */
}

.search-img {
    width: 20px;
    height: 20px;
    padding-left: 8px;
}

.input-validation-error{
    width:100%;
    border: none;
    outline: none;
}

.custom-pagination-list {
    list-style-type: none;
    padding: 0;
    display: flex;
    justify-content: center;
    margin-top: 20px;
    text-decoration: none;
}

.custom-pagination-item {
    margin: 0 5px;
    padding: 5px 10px;
    background-color: #EFEFEF;
    color: #AD99DA;
    border-radius: 25px;
    cursor: pointer;
    text-decoration: none;
}

.custom-pagination-item a {
    color: #AD99DA; /* Set the color for pagination numbers */
    text-decoration: none; /* Remove underline */
}

.custom-pagination-item.active {
    background-color: #AD99DA;
    color: white;
}

.custom-pagination-item.prev,
.custom-pagination-item.next {
    background-color: white; /* Remove background */
}

.stats-header{
    margin-left:48px;
    margin-top:75px;
    margin-bottom:0;
    font-family:'Rubik';
}

.rectangle {
width: 221px;
height: 221px;
margin-right: 25px;
background: #B6AEE5;
}

.title-rectangle {
    font-size:22px;
    margin-left:12px;
    margin-top:38px;
    color:#FFFFFF;
    font-family:Rubik;
}

.number-rectangle {
    font-size:86px;
    margin-right:14px;
    margin-top:-23px;
    color:#FFFFFF;
    font-family:'Rubik';
    text-align:right;
}

.menu-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 10px;
}

.menu-item:hover {
    cursor: pointer;
}

.menu-label {
    margin-top: 3px;
    font-family: Rubik;
    font-size: 14px;
    color: #fff;
}

.admin-label {
    margin-top: 3px;
    font-family: Rubik;
    font-size: 20px;
    color: #fff;
}

.left-menu {
    width: 20%; /* Ширина лівого меню */
    height: 100%; /* Висота лівого меню */
    background-color: #403D49; /* Чорний колір */
    display: flex;
    flex-direction: column;
}

.menu-images {
    margin-top: 12px;
    margin-bottom: 14px;
}

.menu-img {
    width: 52px; /* Змініть розмір зображення за потреби */
    height: 52px; /* Змініть розмір зображення за потреби */
}

.admin-img {
    width: 88px; /* Змініть розмір зображення за потреби */
    height: 88px; /* Змініть розмір зображення за потреби */
}

a {
    text-decoration: none;
}
</style>
</head>
<body>
    <div class="window">
        <div class="left-menu">
            <div class="menu-images">
            <div class="menu-item">
                    <img src="~/images/admin.svg" alt="Admin" class="admin-img" onclick="openModalProfile()">
                <span class="admin-label">Адмін</span>
            </div>
            <a href="/api/doctors">
                <div class="menu-item">
                    <img src="~/images/doctors.svg" alt="Doctors" class="menu-img">
                     <span class="menu-label">Лікарі</span>
                </div>
            </a>
            <a href="/api/patients" class="menu-item">
                <img src="~/images/patients.svg" alt="Patients" class="menu-img">
                <span class="menu-label">Пацієнти</span>
            </a>
            <a href="/api/appointments" class="menu-item">
                <img src="~/images/records.svg" alt="Records" class="menu-img">
                <span class="menu-label">Записи</span>
            </a>
                <a href="/api/stats" class="menu-item">
                <img src="~/images/stats.svg" alt="Stats" class="menu-img">
                <span class="menu-label">Статистика</span>
            </a>
            </div>
        </div>
        @model DoctorViewModel
        <div class="container">
            <div class="custom-table-container">
                @using (Html.BeginForm())
                {
                        <div  class="search-box">
                            <img src="~/images/search.svg" alt="Stats" class="search-img">
                            @Html.TextBox("searchString")  
                        </div>
                }
                <button onclick="openModalAddDoctor()" style="border: none; background-color: #AD99DA; color: white; padding: 10px 20px; border-radius: 10px; cursor: pointer; position: absolute; top: 75px; right: 140px;">Додати лікаря</button>

                <table class="custom-table">
                    <thead>
                        <tr>
                            <th>
                                <a class="th-href" href="@Url.Action("Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter=ViewBag.CurrentFilter })">Працівник</a>
                            </th>
                            <th>
                                <a class="th-href" href="@Url.Action("Index", new { sortOrder = ViewBag.PhoneSortParm, currentFilter=ViewBag.CurrentFilter })">Номер телефону</a>
                            </th>
                            <th>
                                <a class="th-href" href="@Url.Action("Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter=ViewBag.CurrentFilter })">Пошта</a>
                            </th>
                            <th colspan="3" class="actions-col">Actions</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var doctor in Model.IUsers)
                        {
                                <tr>
                                    <td>
                                    @Html.DisplayFor(modelItem => doctor.LastName) @Html.DisplayFor(modelItem => doctor.FirstName)<br />
                                    @Html.DisplayFor(modelItem => doctor.Patronymic)<br />
                                        <span style="font-size: smaller; color: #808080;">@Html.DisplayFor(modelItem => doctor.Type)</span>
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => doctor.Phone)</td>
                                    <td>@Html.DisplayFor(modelItem => doctor.Email)</td>
                                    <td>
                                    <button class="table-btn-img" asp-controller="Users" asp-action="Edit" asp-route-id="@doctor.UserId" onclick="openModalEditDoctor(@doctor.UserId)">
                                                <img src="~/images/history.svg" alt="Stats" class="table-img">
                                           </button>
                                    </td>
                                    <td>
                                    <button class="table-btn-img" asp-controller="Users" asp-action="History" asp-route-id="@doctor.UserId" onclick="openModalHistoryDoctor(@doctor.UserId)">
                                                <img src="~/images/edit.svg" alt="Stats" class="table-img">
                                        </button>
                                    </td>
                                    <td>
                                    <a class="table-btn-img" asp-controller="Users" asp-action="Delete" asp-route-id="@doctor.UserId" onclick="openModalDelete(@doctor.UserId)">
                                                <img src="~/images/delete.svg" alt="Stats" class="table-img">
                                        </a>
                                    </td>
                                </tr>
                        }
                        </tbody>
                    </table>
                <div class="pagination-container">
                                    @Html.PagedListPager(Model.IUsers, page => Url.Action("Index", new { page, sortOrder = ViewBag.LastNameSortParm }), 
                        new PagedListRenderOptions { 
                            LiElementClasses = new string[] { "custom-pagination-item" }, 
                            UlElementClasses = new string[] { "custom-pagination-list" },
                            Display = PagedListDisplayMode.IfNeeded,
                            LinkToPreviousPageFormat = "<",
                            LinkToNextPageFormat = ">"
                        })
                </div>
            </div>
        </div>
    </div>


    <div id="myModalAddDoctor" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModalAddDoctor()">&times;</span>
            <h2 class="dialog-text">Додавання нового лікаря</h2>
            <form action="/add-new-doctor" method="post">
                <div class="form-row">
                    <input type="text" id="firstName" name="firstName" class="rounded-input" placeholder="Ім'я" required>
                    <input type="text" id="lastName" name="lastName" class="rounded-input" placeholder="Прізвище" required>
                </div>
                <div class="form-row">
                    <input type="text" id="patronic" name="patronymic" class="rounded-input" placeholder="По батькові" required>
                    <input type="text" id="type" name="type" class="rounded-input" placeholder="Посада" required>
                </div>
                <div class="form-row">
                    <input type="tel" id="phone" name="phone" class="rounded-input" placeholder="Телефон" required>
                    <input type="email" id="email" name="email" class="rounded-input" placeholder="Пошта" required>
                </div>
                <div class="form-row">
                    <input type="password" id="password" name="password" class="rounded-input" placeholder="Пароль" required>
                </div>
                <button class="add-doctor" type="submit">Надіслати</button>
            </form>
        </div>
    </div>

     
        <div id="myModalEditDoctor" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModalEditDoctor()">&times;</span>
                <h2 class="dialog-text">Редагування лікаря</h2>
                <form action="/save-edit-doctor" method="post">
                    <div class="form-row">
                        <input type="hidden" id="id" name="userId" class="rounded-input" placeholder="Ім'я" required>
                        <input type="text" id="firstName2" name="firstName" class="rounded-input" placeholder="Ім'я" required  >
                        <input type="text" id="lastName2" name="lastName" class="rounded-input" placeholder="Прізвище" required >
                    </div>
                    <div class="form-row">
                        <input type="text" id="middleName2" name="patronymic" class="rounded-input" placeholder="По батькові" required>
                        <input type="text" id="position2" name="type" class="rounded-input" placeholder="Посада" required>
                    </div>
                    <div class="form-row">
                        <input type="tel" id="phone2" name="phone" class="rounded-input" placeholder="Телефон" required >
                        <input type="email" id="email2" name="email" class="rounded-input" placeholder="Пошта" required >
                    </div>
                    <button class="add-doctor" type="submit">Зберегти</button>
                </form>
            </div>
        </div>


    <!-- Модальне вікно для історії лікаря -->
    <div id="myModalHistoryDoctor" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModalHistoryDoctor()">&times;</span>
            <h2 class="dialog-text">Історія записів</h2>
            <div class="dialog-table">
                <table id="historyTable" class="table-history">
                    <thead>
                        <tr>
                            <th>Ім'я</th>
                            <th>Дата</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div id="myModalProfile" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModalProfile()">&times;</span>
            <h2 class="dialog-text">Профіль</h2>
            <form action="login" method="get">
                <div class="form-row">
                    <input type="text" id="firstName5" name="firstName" class="rounded-input" placeholder="Ім'я" readonly>
                    <input type="text" id="lastName5" name="lastName" class="rounded-input" placeholder="Прізвище" readonly>
                </div>
                <div class="form-row">
                    <input type="text" id="middleName5" name="patronymic" class="rounded-input" placeholder="По батькові" readonly>
                    <input type="text" id="position5" name="type" class="rounded-input" placeholder="Посада" readonly>
                </div>
                <div class="form-row">
                    <input type="tel" id="phone5" name="phone" class="rounded-input" placeholder="Телефон" readonly>
                    <input type="email" id="email5" name="email" class="rounded-input" placeholder="Пошта" readonly>
                </div>
                <button class="add-doctor" type="submit">Вийти</button>
            </form>
        </div>
    </div>
    <div id="myModalDelete" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModalDelete()">&times;</span>
            <form action="confirm-delete-doctor" method="post">
                <p style="color:red">Ви впевнені що бажаєте видалити?</p>
                <input type="hidden" id="DeleteId" name="DeleteId" class="rounded-input">
                <button class="add-doctor" type="submit">Видалити</button>
            </form>
            <button class="add-doctor" onclick="closeModalDelete()">Скасувати</button>

        </div>
    </div>
<script>
        var modalDelete = document.getElementById("myModalDelete");
        function openModalDelete(id) {
            modalDelete.style.display = "block";
            document.getElementById("DeleteId").value = id;
        }
        function closeModalDelete() {
            modalDelete.style.display = "none";
        }
        var modalProfile = document.getElementById("myModalProfile");

        function openModalProfile() {
            modalProfile.style.display = "block";

            fetch(`/edit-doctor/${@WebApplication1.Data.Context.UserId}`)
                .then(response => response.json())
                .then(userDTO => {
                    document.getElementById("firstName5").value = userDTO.firstName;
                    document.getElementById("lastName5").value = userDTO.lastName;
                    document.getElementById("middleName5").value = userDTO.patronymic;
                    document.getElementById("position5").value = userDTO.type;
                    document.getElementById("phone5").value = userDTO.phone;
                    document.getElementById("email5").value = userDTO.email;
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });
        }


        function closeModalProfile() {
            modalProfile.style.display = "none";
        }
        var modalAddDoctor = document.getElementById("myModalAddDoctor");
        var modalEditDoctor = document.getElementById("myModalEditDoctor");
        var modalHistoryDoctor = document.getElementById("myModalHistoryDoctor");

        function openModalAddDoctor() {
            modalAddDoctor.style.display = "block";
            modalEditDoctor.style.display = "none"; // Закриваємо модальне вікно для редагування
            modalHistoryDoctor.style.display = "none"; // Закриваємо модальне вікно для редагування
        }

        function closeModalAddDoctor() {
            modalAddDoctor.style.display = "none";
        }

        function openModalEditDoctor(id) {
            modalEditDoctor.style.display = "block";
            modalAddDoctor.style.display = "none"; // Закриваємо модальне вікно для додавання
            modalHistoryDoctor.style.display = "none";
            // Закриваємо модальне вікно для додавання
            fetch(`/edit-doctor/${id}`)
                .then(response => response.json())
                .then(userDTO => {
                    // Вставка отриманих даних у поля форми
                    document.getElementById("id").value = userDTO.userId;
                    document.getElementById("firstName2").value = userDTO.firstName;
                    document.getElementById("lastName2").value = userDTO.lastName;
                    document.getElementById("middleName2").value = userDTO.patronymic;
                    document.getElementById("position2").value = userDTO.type;
                    document.getElementById("phone2").value = userDTO.phone;
                    document.getElementById("email2").value = userDTO.email;
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });


        }

        function closeModalEditDoctor() {
            modalEditDoctor.style.display = "none";
        }

        function openModalHistoryDoctor(id) {
            modalEditDoctor.style.display = "none";
            modalAddDoctor.style.display = "none";
            modalHistoryDoctor.style.display = "block";
            fetch(`/history-doctor/${id}`)
                .then(response => response.json())
                .then(doctorViewModel => {
                    if (doctorViewModel && doctorViewModel.appointments) {
                        const appointments = doctorViewModel.appointments;
                        const tableBody = document.getElementById('historyTable').getElementsByTagName('tbody')[0];

                        // Clear existing rows
                        tableBody.innerHTML = '';

                        // Fill table with data
                        appointments.forEach(appointment => {
                            const row = tableBody.insertRow();
                            const nameCell = row.insertCell(0);
                            const dateCell = row.insertCell(1);

                            nameCell.textContent = appointment.name;
                            dateCell.textContent = appointment.date;
                        });
                    } else {
                        console.error('No appointments data available.');
                    }
                })
                .catch(error => console.error('Error:', error));


        }

        function closeModalHistoryDoctor() {
            modalHistoryDoctor.style.display = "none";
        }

</script>
</body>

</html>
